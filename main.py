import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import asyncio
import os
from config import BOT_TOKEN, WEBAPP_URL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


class DaggerheartBot:
    def __init__(self):
        self.application = Application.builder().token(BOT_TOKEN).build()
        self.setup_handlers()

    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help))
        self.application.add_handler(CommandHandler("game", self.start_game))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        welcome_text = f"""
üó°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Daggerheart Bot, {user.first_name}!

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–≥—Ä–∞—Ç—å –≤ Daggerheart —Å –ì–ú –Ω–∞ –±–∞–∑–µ –ò–ò.

–ö–æ–º–∞–Ω–¥—ã:
/game - –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
/help - –ü–æ–º–æ—â—å

–ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º? üé≤
        """

        keyboard = [
            [InlineKeyboardButton("üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="start_game")],
            [InlineKeyboardButton("üìö –ü—Ä–∞–≤–∏–ª–∞", url="https://ru.daggerheart.su/rule")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(welcome_text, reply_markup=reply_markup)

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üìñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É Daggerheart

üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/game - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä–æ–≤—É—é —Å–µ—Å—Å–∏—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üé≤ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –ù–∞–∂–º–∏ /game –∏–ª–∏ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
2. –°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
3. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π —Å –ì–ú —á–µ—Ä–µ–∑ —á–∞—Ç

üìö –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã: https://ru.daggerheart.su/rule
        """
        await update.message.reply_text(help_text)

    async def start_game(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"""
        logger.info(f"–û—Ç–∫—Ä—ã—Ç–∏–µ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
        logger.info(f"WEBAPP_URL: {WEBAPP_URL}")

        keyboard = [
            [InlineKeyboardButton(
                "üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É",
                web_app=WebAppInfo(url=WEBAPP_URL)
            )]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        game_text = """
üéÆ –ò–≥—Ä–æ–≤–∞—è —Å–µ—Å—Å–∏—è Daggerheart

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
–í –Ω–µ–º —Ç—ã —Å–º–æ–∂–µ—à—å:
- –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
- –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ì–ú
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–≥—Ä–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏

–£–¥–∞—á–∏ –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö! üó°Ô∏è
        """

        await update.message.reply_text(game_text, reply_markup=reply_markup)

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ —ç—Ö–æ
        user_message = update.message.text

        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        response = f"–ü–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_message}\n\n(–ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ì–ú!)"

        await update.message.reply_text(response)

    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"""
        logger.error(f"Update {update} caused error {context.error}")

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("–ó–∞–ø—É—Å–∫ Daggerheart Bot...")
        self.application.add_error_handler(self.error_handler)
        self.application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    bot = DaggerheartBot()
    bot.run()